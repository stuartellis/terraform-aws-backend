---
- name: Deploy CloudFormation for automated Terraform access
  hosts: localhost
  vars_prompt:
    - name: managing_account_id
      prompt: Specify the AWS account number for the role
      private: no
    - name: org_prefix
      prompt: Specify the namespace
      private: no
    - name: stack_prefix
      prompt: Specify the prefix for the stacks
      private: no
    - name: iam_role_arns
      prompt: Specify the ARNs of the role for accessing the Terraform backend
      private: no

  vars:
    stack_tags:
      - key: "{{ org_prefix }}:source"
        value: ansible
      - key: "{{ org_prefix }}:namespace"
        value: "{{ org_prefix }}"
      - key: "{{ org_prefix }}:prefix"
        value: "{{ stack_prefix }}"

  tasks:
    - name: Stack for IAM group to use Terraform
      register: iam_group
      amazon.aws.cloudformation:
        stack_name: "{{ org_prefix }}-{{ stack_prefix }}-group"
        region: us-east-1
        state: "present"
        template: "../cloudformation/managing-account/tf-identities/cfn-tf-access-group.yml"
        template_parameters:
          Prefix: "{{ org_prefix }}-{{ stack_prefix }}"
          RoleArns: "{{ iam_role_arns }}"
        termination_protection: yes
        tags: "{{ stack_tags | items2dict }}"

    - name: Stack for IAM user to use Terraform with CI
      amazon.aws.cloudformation:
        stack_name: "{{ org_prefix }}-{{ stack_prefix }}-ci-user"
        region: us-east-1
        state: "present"
        template: "../cloudformation/managing-account/tf-identities/cfn-tf-access-user.yml"
        template_parameters:
          Prefix: "{{ org_prefix }}-{{ stack_prefix }}"
          TfAccessGroup: "{{ iam_group.stack_outputs.TfAccessGroup }}"
          UserName: ci
        termination_protection: yes
        tags: "{{ stack_tags | items2dict }}"
